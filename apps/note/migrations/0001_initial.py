# Generated by Django 2.2.28 on 2022-08-17 20:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('member', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.BigIntegerField(default=0, help_text='in centimes, money credited for this instance', verbose_name='account balance')),
                ('last_negative', models.DateTimeField(blank=True, help_text='last time the balance was negative', null=True, verbose_name='last negative date')),
                ('display_image', models.ImageField(default='pic/default.png', max_length=255, upload_to='pic/', verbose_name='display image')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this note should be treated as active. Unselect this instead of deleting notes.', verbose_name='active')),
                ('inactivity_reason', models.CharField(blank=True, choices=[('manual', 'The user blocked his/her note manually, eg. when he/she left the school for holidays. It can be reactivated at any time.'), ('forced', "The note is blocked by the the BDE and can't be manually reactivated.")], default='', max_length=255)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_note.note_set+', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'note',
                'verbose_name_plural': 'notes',
            },
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'transaction category',
                'verbose_name_plural': 'transaction categories',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_alias', models.CharField(default='', max_length=255, verbose_name='used alias')),
                ('destination_alias', models.CharField(default='', max_length=255, verbose_name='used alias')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='quantity')),
                ('amount', models.PositiveIntegerField(verbose_name='amount')),
                ('reason', models.CharField(max_length=255, verbose_name='reason')),
                ('valid', models.BooleanField(default=True, verbose_name='valid')),
                ('invalidity_reason', models.CharField(blank=True, default='', max_length=255, verbose_name='invalidity reason')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='note.Note', verbose_name='destination')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_note.transaction_set+', to='contenttypes.ContentType')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='note.Note', verbose_name='source')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='MembershipTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Transaction')),
            ],
            options={
                'verbose_name': 'membership transaction',
                'verbose_name_plural': 'membership transactions',
            },
            bases=('note.transaction',),
        ),
        migrations.CreateModel(
            name='NoteClub',
            fields=[
                ('note_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Note')),
            ],
            options={
                'verbose_name': 'club note',
                'verbose_name_plural': 'clubs notes',
            },
            bases=('note.note',),
        ),
        migrations.CreateModel(
            name='NoteSpecial',
            fields=[
                ('note_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Note')),
                ('special_type', models.CharField(max_length=255, unique=True, verbose_name='type')),
            ],
            options={
                'verbose_name': 'special note',
                'verbose_name_plural': 'special notes',
            },
            bases=('note.note',),
        ),
        migrations.CreateModel(
            name='NoteUser',
            fields=[
                ('note_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Note')),
            ],
            options={
                'verbose_name': "one's note",
                'verbose_name_plural': 'users note',
            },
            bases=('note.note',),
        ),
        migrations.CreateModel(
            name='RecurrentTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Transaction')),
            ],
            options={
                'verbose_name': 'recurrent transaction',
                'verbose_name_plural': 'recurrent transactions',
            },
            bases=('note.transaction',),
        ),
        migrations.CreateModel(
            name='SpecialTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='note.Transaction')),
                ('last_name', models.CharField(max_length=255, verbose_name='name')),
                ('first_name', models.CharField(max_length=255, verbose_name='first_name')),
            ],
            options={
                'verbose_name': 'Special transaction',
                'verbose_name_plural': 'Special transactions',
            },
            bases=('note.transaction',),
        ),
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('normalized_name', models.CharField(editable=False, max_length=255, unique=True)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alias', to='note.Note')),
            ],
            options={
                'verbose_name': 'alias',
                'verbose_name_plural': 'aliases',
            },
        ),
        migrations.CreateModel(
            name='Trust',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trusted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted', to='note.Note', verbose_name='trusted')),
                ('trusting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusting', to='note.Note', verbose_name='trusting')),
            ],
            options={
                'verbose_name': 'frienship',
                'verbose_name_plural': 'friendships',
                'unique_together': {('trusting', 'trusted')},
            },
        ),
        migrations.CreateModel(
            name='TransactionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'A template with this name already exist'}, max_length=255, unique=True, verbose_name='name')),
                ('amount', models.PositiveIntegerField(verbose_name='amount')),
                ('display', models.BooleanField(default=True, verbose_name='display')),
                ('highlighted', models.BooleanField(default=False, verbose_name='highlighted')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='description')),
                ('category', models.ForeignKey(max_length=31, on_delete=django.db.models.deletion.PROTECT, related_name='templates', to='note.TemplateCategory', verbose_name='type')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='note.NoteClub', verbose_name='destination')),
            ],
            options={
                'verbose_name': 'transaction template',
                'verbose_name_plural': 'transaction templates',
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='note_transa_created_bea8b1_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['source'], name='note_transa_source__4a1a1e_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['destination'], name='note_transa_destina_6e1bb4_idx'),
        ),
        migrations.AddField(
            model_name='recurrenttransaction',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='note.TransactionTemplate'),
        ),
        migrations.AddField(
            model_name='noteuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='note', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='noteclub',
            name='club',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='note', to='member.Club', verbose_name='club'),
        ),
        migrations.AddField(
            model_name='membershiptransaction',
            name='membership',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='transaction', to='member.Membership'),
        ),
        migrations.AddIndex(
            model_name='alias',
            index=models.Index(fields=['name'], name='note_alias_name_a89405_idx'),
        ),
        migrations.AddIndex(
            model_name='alias',
            index=models.Index(fields=['normalized_name'], name='note_alias_normali_bd52b4_idx'),
        ),
    ]
